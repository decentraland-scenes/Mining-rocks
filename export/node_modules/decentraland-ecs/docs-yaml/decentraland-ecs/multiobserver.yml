### YamlMime:UniversalReference
items:
  - uid: decentraland-ecs.MultiObserver
    summary: Represent a list of observers registered to multiple Observables object.
    isPreview: true
    name: MultiObserver
    fullName: MultiObserver
    langs:
      - typeScript
    type: class
    package: decentraland-ecs
    children:
      - decentraland-ecs.MultiObserver.dispose
      - decentraland-ecs.MultiObserver.Watch
  - uid: decentraland-ecs.MultiObserver.dispose
    summary: Release associated resources
    isPreview: true
    name: dispose()
    fullName: dispose
    langs:
      - typeScript
    type: method
    syntax:
      content: 'dispose(): void;'
      return:
        type:
          - void
        description: ''
  - uid: decentraland-ecs.MultiObserver.Watch
    summary: Raise a callback when one of the observable will notify
    isPreview: true
    name: 'Watch(observables, callback, mask, scope)'
    fullName: Watch
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        static Watch<T>(observables: Observable<T>[], callback: (eventData: T, eventState: ObserverEventState) => void,
        mask?: number, scope?: any): MultiObserver<T>;
      return:
        type:
          - MultiObserver<T>
        description: the new MultiObserver
      parameters:
        - id: observables
          description: defines a list of observables to watch
          type:
            - 'Observable<T>[]'
        - id: callback
          description: defines the callback to call on notification
          type:
            - '(eventData: T, eventState: ObserverEventState) => void'
        - id: mask
          description: defines the mask used to filter notifications
          type:
            - number
        - id: scope
          description: defines the current scope used to restore the JS context
          type:
            - any
