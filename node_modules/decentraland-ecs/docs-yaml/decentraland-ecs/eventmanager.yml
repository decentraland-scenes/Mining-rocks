### YamlMime:UniversalReference
items:
  - uid: decentraland-ecs.EventManager
    name: EventManager
    fullName: EventManager
    langs:
      - typeScript
    type: class
    package: decentraland-ecs
    children:
      - decentraland-ecs.EventManager.addListener
      - decentraland-ecs.EventManager.fireEvent
      - decentraland-ecs.EventManager.removeListener
  - uid: decentraland-ecs.EventManager.addListener
    name: 'addListener(eventClass, listener, listenerFunction)'
    fullName: addListener
    langs:
      - typeScript
    type: method
    syntax:
      content: >-
        addListener<T, X>(eventClass: IEventConstructor<T>, listener: X, listenerFunction: (this: X, event: T) => void):
        void;
      return:
        type:
          - void
        description: ''
      parameters:
        - id: eventClass
          description: ''
          type:
            - IEventConstructor<T>
        - id: listener
          description: ''
          type:
            - X
        - id: listenerFunction
          description: ''
          type:
            - '(this: X, event: T) => void'
  - uid: decentraland-ecs.EventManager.fireEvent
    name: fireEvent(event)
    fullName: fireEvent
    langs:
      - typeScript
    type: method
    syntax:
      content: 'fireEvent<T extends object>(event: T): void;'
      return:
        type:
          - void
        description: ''
      parameters:
        - id: event
          description: ''
          type:
            - T
  - uid: decentraland-ecs.EventManager.removeListener
    name: 'removeListener(listener, eventClass)'
    fullName: removeListener
    langs:
      - typeScript
    type: method
    syntax:
      content: 'removeListener<X>(listener: X, eventClass: IEventConstructor<any>): boolean;'
      return:
        type:
          - boolean
        description: ''
      parameters:
        - id: listener
          description: ''
          type:
            - X
        - id: eventClass
          description: ''
          type:
            - IEventConstructor<any>
